/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ActivityLog,
  ErrorResponse,
} from '../models/index';
import {
    ActivityLogFromJSON,
    ActivityLogToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models/index';

export interface ListActivityLogsRequest {
    limit?: number;
    offset?: number;
}

/**
 * ActivityLogsApi - interface
 * 
 * @export
 * @interface ActivityLogsApiInterface
 */
export interface ActivityLogsApiInterface {
    /**
     * 
     * @summary List activity logs
     * @param {number} [limit] Maximum number of items to return
     * @param {number} [offset] Number of items to skip before starting to collect results
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActivityLogsApiInterface
     */
    listActivityLogsRaw(requestParameters: ListActivityLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ActivityLog>>>;

    /**
     * List activity logs
     */
    listActivityLogs(requestParameters: ListActivityLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ActivityLog>>;

}

/**
 * 
 */
export class ActivityLogsApi extends runtime.BaseAPI implements ActivityLogsApiInterface {

    /**
     * List activity logs
     */
    async listActivityLogsRaw(requestParameters: ListActivityLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ActivityLog>>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/activity-logs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ActivityLogFromJSON));
    }

    /**
     * List activity logs
     */
    async listActivityLogs(requestParameters: ListActivityLogsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ActivityLog>> {
        const response = await this.listActivityLogsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
