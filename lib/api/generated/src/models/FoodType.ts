/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FoodType
 */
export interface FoodType {
    /**
     * 
     * @type {string}
     * @memberof FoodType
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FoodType
     */
    name?: string;
    /**
     * 
     * @type {Date}
     * @memberof FoodType
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof FoodType
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the FoodType interface.
 */
export function instanceOfFoodType(value: object): value is FoodType {
    return true;
}

export function FoodTypeFromJSON(json: any): FoodType {
    return FoodTypeFromJSONTyped(json, false);
}

export function FoodTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoodType {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function FoodTypeToJSON(json: any): FoodType {
    return FoodTypeToJSONTyped(json, false);
}

export function FoodTypeToJSONTyped(value?: FoodType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

