/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PartnerCreate
 */
export interface PartnerCreate {
    /**
     * 
     * @type {string}
     * @memberof PartnerCreate
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerCreate
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof PartnerCreate
     */
    maxCapacity?: number;
    /**
     * 
     * @type {number}
     * @memberof PartnerCreate
     */
    capacity?: number;
    /**
     * 
     * @type {string}
     * @memberof PartnerCreate
     */
    contactEmail: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerCreate
     */
    contactPhone: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerCreate
     */
    locationId?: string;
}

/**
 * Check if a given object implements the PartnerCreate interface.
 */
export function instanceOfPartnerCreate(value: object): value is PartnerCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contactEmail' in value) || value['contactEmail'] === undefined) return false;
    if (!('contactPhone' in value) || value['contactPhone'] === undefined) return false;
    return true;
}

export function PartnerCreateFromJSON(json: any): PartnerCreate {
    return PartnerCreateFromJSONTyped(json, false);
}

export function PartnerCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartnerCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'name': json['name'],
        'maxCapacity': json['max_capacity'] == null ? undefined : json['max_capacity'],
        'capacity': json['capacity'] == null ? undefined : json['capacity'],
        'contactEmail': json['contact_email'],
        'contactPhone': json['contact_phone'],
        'locationId': json['location_id'] == null ? undefined : json['location_id'],
    };
}

export function PartnerCreateToJSON(json: any): PartnerCreate {
    return PartnerCreateToJSONTyped(json, false);
}

export function PartnerCreateToJSONTyped(value?: PartnerCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'name': value['name'],
        'max_capacity': value['maxCapacity'],
        'capacity': value['capacity'],
        'contact_email': value['contactEmail'],
        'contact_phone': value['contactPhone'],
        'location_id': value['locationId'],
    };
}

