/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PartnerUpdate
 */
export interface PartnerUpdate {
    /**
     * 
     * @type {string}
     * @memberof PartnerUpdate
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerUpdate
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof PartnerUpdate
     */
    maxCapacity?: number;
    /**
     * 
     * @type {number}
     * @memberof PartnerUpdate
     */
    capacity?: number;
    /**
     * 
     * @type {string}
     * @memberof PartnerUpdate
     */
    contactEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerUpdate
     */
    contactPhone?: string;
    /**
     * 
     * @type {string}
     * @memberof PartnerUpdate
     */
    locationId?: string;
}

/**
 * Check if a given object implements the PartnerUpdate interface.
 */
export function instanceOfPartnerUpdate(value: object): value is PartnerUpdate {
    return true;
}

export function PartnerUpdateFromJSON(json: any): PartnerUpdate {
    return PartnerUpdateFromJSONTyped(json, false);
}

export function PartnerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartnerUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'maxCapacity': json['max_capacity'] == null ? undefined : json['max_capacity'],
        'capacity': json['capacity'] == null ? undefined : json['capacity'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'contactPhone': json['contact_phone'] == null ? undefined : json['contact_phone'],
        'locationId': json['location_id'] == null ? undefined : json['location_id'],
    };
}

export function PartnerUpdateToJSON(json: any): PartnerUpdate {
    return PartnerUpdateToJSONTyped(json, false);
}

export function PartnerUpdateToJSONTyped(value?: PartnerUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'name': value['name'],
        'max_capacity': value['maxCapacity'],
        'capacity': value['capacity'],
        'contact_email': value['contactEmail'],
        'contact_phone': value['contactPhone'],
        'location_id': value['locationId'],
    };
}

