/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DonationCreate
 */
export interface DonationCreate {
    /**
     * 
     * @type {string}
     * @memberof DonationCreate
     */
    donorId: string;
    /**
     * 
     * @type {string}
     * @memberof DonationCreate
     */
    foodTypeId: string;
    /**
     * 
     * @type {number}
     * @memberof DonationCreate
     */
    quantity: number;
    /**
     * 
     * @type {string}
     * @memberof DonationCreate
     */
    unit: string;
    /**
     * 
     * @type {Date}
     * @memberof DonationCreate
     */
    expirationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DonationCreate
     */
    storageRequirements?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DonationCreate
     */
    requiresRefrigeration?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationCreate
     */
    requiresFreezing?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationCreate
     */
    isFragile?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationCreate
     */
    requiresHeavyLifting?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DonationCreate
     */
    pickupWindowStart: Date;
    /**
     * 
     * @type {Date}
     * @memberof DonationCreate
     */
    pickupWindowEnd: Date;
}

/**
 * Check if a given object implements the DonationCreate interface.
 */
export function instanceOfDonationCreate(value: object): value is DonationCreate {
    if (!('donorId' in value) || value['donorId'] === undefined) return false;
    if (!('foodTypeId' in value) || value['foodTypeId'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('unit' in value) || value['unit'] === undefined) return false;
    if (!('pickupWindowStart' in value) || value['pickupWindowStart'] === undefined) return false;
    if (!('pickupWindowEnd' in value) || value['pickupWindowEnd'] === undefined) return false;
    return true;
}

export function DonationCreateFromJSON(json: any): DonationCreate {
    return DonationCreateFromJSONTyped(json, false);
}

export function DonationCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DonationCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'donorId': json['donor_id'],
        'foodTypeId': json['food_type_id'],
        'quantity': json['quantity'],
        'unit': json['unit'],
        'expirationDate': json['expiration_date'] == null ? undefined : (new Date(json['expiration_date'])),
        'storageRequirements': json['storage_requirements'] == null ? undefined : json['storage_requirements'],
        'requiresRefrigeration': json['requires_refrigeration'] == null ? undefined : json['requires_refrigeration'],
        'requiresFreezing': json['requires_freezing'] == null ? undefined : json['requires_freezing'],
        'isFragile': json['is_fragile'] == null ? undefined : json['is_fragile'],
        'requiresHeavyLifting': json['requires_heavy_lifting'] == null ? undefined : json['requires_heavy_lifting'],
        'pickupWindowStart': (new Date(json['pickup_window_start'])),
        'pickupWindowEnd': (new Date(json['pickup_window_end'])),
    };
}

export function DonationCreateToJSON(json: any): DonationCreate {
    return DonationCreateToJSONTyped(json, false);
}

export function DonationCreateToJSONTyped(value?: DonationCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'donor_id': value['donorId'],
        'food_type_id': value['foodTypeId'],
        'quantity': value['quantity'],
        'unit': value['unit'],
        'expiration_date': value['expirationDate'] == null ? undefined : ((value['expirationDate']).toISOString()),
        'storage_requirements': value['storageRequirements'],
        'requires_refrigeration': value['requiresRefrigeration'],
        'requires_freezing': value['requiresFreezing'],
        'is_fragile': value['isFragile'],
        'requires_heavy_lifting': value['requiresHeavyLifting'],
        'pickup_window_start': ((value['pickupWindowStart']).toISOString()),
        'pickup_window_end': ((value['pickupWindowEnd']).toISOString()),
    };
}

