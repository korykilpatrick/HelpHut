/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
    UserRoleToJSONTyped,
} from './UserRole';

/**
 * 
 * @export
 * @interface UserCreate
 */
export interface UserCreate {
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    hashedPassword: string;
    /**
     * 
     * @type {UserRole}
     * @memberof UserCreate
     */
    role: UserRole;
}



/**
 * Check if a given object implements the UserCreate interface.
 */
export function instanceOfUserCreate(value: object): value is UserCreate {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('hashedPassword' in value) || value['hashedPassword'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function UserCreateFromJSON(json: any): UserCreate {
    return UserCreateFromJSONTyped(json, false);
}

export function UserCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'hashedPassword': json['hashed_password'],
        'role': UserRoleFromJSON(json['role']),
    };
}

export function UserCreateToJSON(json: any): UserCreate {
    return UserCreateToJSONTyped(json, false);
}

export function UserCreateToJSONTyped(value?: UserCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'hashed_password': value['hashedPassword'],
        'role': UserRoleToJSON(value['role']),
    };
}

