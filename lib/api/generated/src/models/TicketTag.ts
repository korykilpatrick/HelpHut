/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TicketTag
 */
export interface TicketTag {
    /**
     * 
     * @type {string}
     * @memberof TicketTag
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketTag
     */
    ticketId?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketTag
     */
    tag?: string;
    /**
     * 
     * @type {Date}
     * @memberof TicketTag
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TicketTag
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the TicketTag interface.
 */
export function instanceOfTicketTag(value: object): value is TicketTag {
    return true;
}

export function TicketTagFromJSON(json: any): TicketTag {
    return TicketTagFromJSONTyped(json, false);
}

export function TicketTagFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketTag {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ticketId': json['ticket_id'] == null ? undefined : json['ticket_id'],
        'tag': json['tag'] == null ? undefined : json['tag'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function TicketTagToJSON(json: any): TicketTag {
    return TicketTagToJSONTyped(json, false);
}

export function TicketTagToJSONTyped(value?: TicketTag | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ticket_id': value['ticketId'],
        'tag': value['tag'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

