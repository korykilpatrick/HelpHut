/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TicketAttachment
 */
export interface TicketAttachment {
    /**
     * 
     * @type {string}
     * @memberof TicketAttachment
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketAttachment
     */
    ticketId?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketAttachment
     */
    attachment?: string;
    /**
     * 
     * @type {Date}
     * @memberof TicketAttachment
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TicketAttachment
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the TicketAttachment interface.
 */
export function instanceOfTicketAttachment(value: object): value is TicketAttachment {
    return true;
}

export function TicketAttachmentFromJSON(json: any): TicketAttachment {
    return TicketAttachmentFromJSONTyped(json, false);
}

export function TicketAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketAttachment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ticketId': json['ticket_id'] == null ? undefined : json['ticket_id'],
        'attachment': json['attachment'] == null ? undefined : json['attachment'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function TicketAttachmentToJSON(json: any): TicketAttachment {
    return TicketAttachmentToJSONTyped(json, false);
}

export function TicketAttachmentToJSONTyped(value?: TicketAttachment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ticket_id': value['ticketId'],
        'attachment': value['attachment'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

