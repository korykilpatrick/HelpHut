/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TicketNote
 */
export interface TicketNote {
    /**
     * 
     * @type {string}
     * @memberof TicketNote
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketNote
     */
    ticketId?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketNote
     */
    note?: string;
    /**
     * 
     * @type {Date}
     * @memberof TicketNote
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TicketNote
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the TicketNote interface.
 */
export function instanceOfTicketNote(value: object): value is TicketNote {
    return true;
}

export function TicketNoteFromJSON(json: any): TicketNote {
    return TicketNoteFromJSONTyped(json, false);
}

export function TicketNoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketNote {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ticketId': json['ticket_id'] == null ? undefined : json['ticket_id'],
        'note': json['note'] == null ? undefined : json['note'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function TicketNoteToJSON(json: any): TicketNote {
    return TicketNoteToJSONTyped(json, false);
}

export function TicketNoteToJSONTyped(value?: TicketNote | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ticket_id': value['ticketId'],
        'note': value['note'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

