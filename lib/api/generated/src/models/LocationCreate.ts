/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocationCreate
 */
export interface LocationCreate {
    /**
     * 
     * @type {string}
     * @memberof LocationCreate
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationCreate
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationCreate
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationCreate
     */
    zip?: string;
    /**
     * 
     * @type {number}
     * @memberof LocationCreate
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationCreate
     */
    longitude?: number;
}

/**
 * Check if a given object implements the LocationCreate interface.
 */
export function instanceOfLocationCreate(value: object): value is LocationCreate {
    return true;
}

export function LocationCreateFromJSON(json: any): LocationCreate {
    return LocationCreateFromJSONTyped(json, false);
}

export function LocationCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'street': json['street'] == null ? undefined : json['street'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'zip': json['zip'] == null ? undefined : json['zip'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
    };
}

export function LocationCreateToJSON(json: any): LocationCreate {
    return LocationCreateToJSONTyped(json, false);
}

export function LocationCreateToJSONTyped(value?: LocationCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'street': value['street'],
        'city': value['city'],
        'state': value['state'],
        'zip': value['zip'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
    };
}

