/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DonationUpdate
 */
export interface DonationUpdate {
    /**
     * 
     * @type {string}
     * @memberof DonationUpdate
     */
    foodTypeId?: string;
    /**
     * 
     * @type {number}
     * @memberof DonationUpdate
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof DonationUpdate
     */
    unit?: string;
    /**
     * 
     * @type {Date}
     * @memberof DonationUpdate
     */
    expirationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof DonationUpdate
     */
    storageRequirements?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DonationUpdate
     */
    requiresRefrigeration?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationUpdate
     */
    requiresFreezing?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationUpdate
     */
    isFragile?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DonationUpdate
     */
    requiresHeavyLifting?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DonationUpdate
     */
    pickupWindowStart?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DonationUpdate
     */
    pickupWindowEnd?: Date;
}

/**
 * Check if a given object implements the DonationUpdate interface.
 */
export function instanceOfDonationUpdate(value: object): value is DonationUpdate {
    return true;
}

export function DonationUpdateFromJSON(json: any): DonationUpdate {
    return DonationUpdateFromJSONTyped(json, false);
}

export function DonationUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DonationUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'foodTypeId': json['food_type_id'] == null ? undefined : json['food_type_id'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'expirationDate': json['expiration_date'] == null ? undefined : (new Date(json['expiration_date'])),
        'storageRequirements': json['storage_requirements'] == null ? undefined : json['storage_requirements'],
        'requiresRefrigeration': json['requires_refrigeration'] == null ? undefined : json['requires_refrigeration'],
        'requiresFreezing': json['requires_freezing'] == null ? undefined : json['requires_freezing'],
        'isFragile': json['is_fragile'] == null ? undefined : json['is_fragile'],
        'requiresHeavyLifting': json['requires_heavy_lifting'] == null ? undefined : json['requires_heavy_lifting'],
        'pickupWindowStart': json['pickup_window_start'] == null ? undefined : (new Date(json['pickup_window_start'])),
        'pickupWindowEnd': json['pickup_window_end'] == null ? undefined : (new Date(json['pickup_window_end'])),
    };
}

export function DonationUpdateToJSON(json: any): DonationUpdate {
    return DonationUpdateToJSONTyped(json, false);
}

export function DonationUpdateToJSONTyped(value?: DonationUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'food_type_id': value['foodTypeId'],
        'quantity': value['quantity'],
        'unit': value['unit'],
        'expiration_date': value['expirationDate'] == null ? undefined : ((value['expirationDate']).toISOString()),
        'storage_requirements': value['storageRequirements'],
        'requires_refrigeration': value['requiresRefrigeration'],
        'requires_freezing': value['requiresFreezing'],
        'is_fragile': value['isFragile'],
        'requires_heavy_lifting': value['requiresHeavyLifting'],
        'pickup_window_start': value['pickupWindowStart'] == null ? undefined : ((value['pickupWindowStart']).toISOString()),
        'pickup_window_end': value['pickupWindowEnd'] == null ? undefined : ((value['pickupWindowEnd']).toISOString()),
    };
}

