/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VolunteerAvailabilityTime
 */
export interface VolunteerAvailabilityTime {
    /**
     * 
     * @type {string}
     * @memberof VolunteerAvailabilityTime
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof VolunteerAvailabilityTime
     */
    volunteerId?: string;
    /**
     * 
     * @type {number}
     * @memberof VolunteerAvailabilityTime
     */
    dayOfWeek?: number;
    /**
     * 
     * @type {string}
     * @memberof VolunteerAvailabilityTime
     */
    startTime?: string;
    /**
     * 
     * @type {string}
     * @memberof VolunteerAvailabilityTime
     */
    endTime?: string;
    /**
     * 
     * @type {Date}
     * @memberof VolunteerAvailabilityTime
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof VolunteerAvailabilityTime
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the VolunteerAvailabilityTime interface.
 */
export function instanceOfVolunteerAvailabilityTime(value: object): value is VolunteerAvailabilityTime {
    return true;
}

export function VolunteerAvailabilityTimeFromJSON(json: any): VolunteerAvailabilityTime {
    return VolunteerAvailabilityTimeFromJSONTyped(json, false);
}

export function VolunteerAvailabilityTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): VolunteerAvailabilityTime {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'volunteerId': json['volunteer_id'] == null ? undefined : json['volunteer_id'],
        'dayOfWeek': json['day_of_week'] == null ? undefined : json['day_of_week'],
        'startTime': json['start_time'] == null ? undefined : json['start_time'],
        'endTime': json['end_time'] == null ? undefined : json['end_time'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function VolunteerAvailabilityTimeToJSON(json: any): VolunteerAvailabilityTime {
    return VolunteerAvailabilityTimeToJSONTyped(json, false);
}

export function VolunteerAvailabilityTimeToJSONTyped(value?: VolunteerAvailabilityTime | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'volunteer_id': value['volunteerId'],
        'day_of_week': value['dayOfWeek'],
        'start_time': value['startTime'],
        'end_time': value['endTime'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

