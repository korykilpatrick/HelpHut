/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActivityLog
 */
export interface ActivityLog {
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    action?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    tableName?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    recordId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    oldValue?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityLog
     */
    newValue?: string;
    /**
     * 
     * @type {Date}
     * @memberof ActivityLog
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the ActivityLog interface.
 */
export function instanceOfActivityLog(value: object): value is ActivityLog {
    return true;
}

export function ActivityLogFromJSON(json: any): ActivityLog {
    return ActivityLogFromJSONTyped(json, false);
}

export function ActivityLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityLog {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'action': json['action'] == null ? undefined : json['action'],
        'tableName': json['table_name'] == null ? undefined : json['table_name'],
        'recordId': json['record_id'] == null ? undefined : json['record_id'],
        'oldValue': json['old_value'] == null ? undefined : json['old_value'],
        'newValue': json['new_value'] == null ? undefined : json['new_value'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
    };
}

export function ActivityLogToJSON(json: any): ActivityLog {
    return ActivityLogToJSONTyped(json, false);
}

export function ActivityLogToJSONTyped(value?: ActivityLog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'action': value['action'],
        'table_name': value['tableName'],
        'record_id': value['recordId'],
        'old_value': value['oldValue'],
        'new_value': value['newValue'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

