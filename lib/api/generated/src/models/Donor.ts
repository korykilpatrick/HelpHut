/* tslint:disable */
/* eslint-disable */
/**
 * HelpHut Food Rescue Management
 * Centralized platform for coordinating food donations, volunteers, and partner organizations. Aligns with the HelpHut mission to efficiently rescue food in Austin, reduce waste, and help those in need. This specification is maintained under a TDD approach, with auto-generated tests ensuring coverage of each endpoint. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Donor
 */
export interface Donor {
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    contactEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    contactPhone?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    businessHours?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    pickupPreferences?: string;
    /**
     * 
     * @type {string}
     * @memberof Donor
     */
    locationId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Donor
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Donor
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the Donor interface.
 */
export function instanceOfDonor(value: object): value is Donor {
    return true;
}

export function DonorFromJSON(json: any): Donor {
    return DonorFromJSONTyped(json, false);
}

export function DonorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Donor {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'contactPhone': json['contact_phone'] == null ? undefined : json['contact_phone'],
        'businessHours': json['business_hours'] == null ? undefined : json['business_hours'],
        'pickupPreferences': json['pickup_preferences'] == null ? undefined : json['pickup_preferences'],
        'locationId': json['location_id'] == null ? undefined : json['location_id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function DonorToJSON(json: any): Donor {
    return DonorToJSONTyped(json, false);
}

export function DonorToJSONTyped(value?: Donor | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'name': value['name'],
        'contact_email': value['contactEmail'],
        'contact_phone': value['contactPhone'],
        'business_hours': value['businessHours'],
        'pickup_preferences': value['pickupPreferences'],
        'location_id': value['locationId'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

